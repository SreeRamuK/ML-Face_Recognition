Data pre-processing:

Images with multiple faces will not get loaded in Data
Only data of the Face in the image will get loaded
size of image data loaded will get resized into specific size


70% of Data loaded will be training data
30% of Data loaded will be testing data





Models used:

Convolution, Random forest, Logistic Regression, Linear SVM and Polynomial SVM





Convolution:


Training accuracy: 100%

[[24  0  0  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0 17  0  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0 13  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0 13  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0 24  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0 24  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0 12  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0 20  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 22  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0 12  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0 26  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0 13  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0 28  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0 13  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0 23]]


Testing accuracy: ~50%

[[ 6  1  0  0  0  1  1  0  1  1  0  0  0  2  0]
 [ 0  4  1  0  0  1  1  0  0  0  3  0  0  0  0]
 [ 0  0  2  0  0  0  0  0  0  0  0  0  0  1  0]
 [ 0  0  0  3  0  1  0  0  0  0  0  0  0  1  0]
 [ 0  0  0  0  3  0  0  0  1  1  1  0  0  0  0]
 [ 0  0  2  0  0  6  0  0  0  0  1  0  0  1  1]
 [ 0  1  0  2  0  4  2  0  0  0  2  0  0  0  0]
 [ 0  0  0  0  0  0  0  5  0  0  1  0  0  0  0]
 [ 0  2  1  1  0  0  0  0  2  0  2  0  0  2  0]
 [ 0  0  1  0  1  1  0  0  0  2  0  0  0  0  0]
 [ 0  4  0  0  0  2  0  0  0  0 10  0  0  0  0]
 [ 0  0  0  0  0  1  1  0  0  0  0  1  0  0  1]
 [ 0  1  0  0  0  0  0  0  1  0  1  0  9  0  0]
 [ 0  0  0  1  0  2  0  0  1  0  2  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  5]]





Random Forest:


Training accuracy: 100%

Confusion matrix:

[[31  0  0  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0 18  0  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0 10  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0 10  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0 23  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0 22  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0 16  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 16  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0 12  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0 38  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0 13  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0 26  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0 15  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0 20]]
 
 
Testing accuracy: ~38%

Confusion matrix:

[[ 3  2  1  2  2  0  3  0  6  1  0  0  1  1  0]
 [ 0  3  0  0  0  0  1  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  1  0  0  0  0  0  0  0  0  0  0  0]
 [ 1  1  0  1  1  1  1  0  2  0  0  0  1  0  1]
 [ 0  0  0  0  0  7  0  1  1  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  1  0  0  0  0  0  0  0  0]
 [ 0  0  1  1  0  2  0  6  1  1  0  1  0  0  0]
 [ 0  0  0  0  0  0  0  1  0  0  0  0  1  0  1]
 [ 0  0  0  0  0  0  0  0  0  1  0  0  0  0  0]
 [ 1  1  1  1  3  1  1  1  3  0  4  1  0  1  2]
 [ 0  1  0  0  0  0  0  0  2  0  0  2  0  0  0]
 [ 0  0  0  0  0  1  2  1  0  1  0  0 11  0  0]
 [ 0  1  2  2  1  1  0  0  1  0  0  0  0  2  0]
 [ 1  0  1  0  0  0  0  0  0  1  0  0  0  0  4]]
 




Logistic Regression:


Training accuracy: 100%

Confusion matrix:

[[31  0  0  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0 18  0  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0 10  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0 10  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0 23  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0 22  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0 16  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 16  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0 12  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0 38  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0 13  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0 26  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0 15  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0 20]]
 
 
 Testing accuracy: ~46%
 
 Confusion matrix:
 
[[ 4  3  1  0  1  0  2  0  1  0  0  0  0  0  1]
 [ 0  4  0  0  1  0  1  0  0  0  0  0  0  1  0]
 [ 0  0  1  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  1  0  0  0  1  1  0  0  0  0  0  0]
 [ 0  0  0  2  2  0  0  0  1  0  0  0  0  0  0]
 [ 1  1  0  0  0  6  1  1  1  0  0  0  0  0  1]
 [ 0  0  0  0  0  0  4  0  1  0  0  0  0  0  0]
 [ 0  0  0  1  0  0  0  5  0  0  0  0  0  0  0]
 [ 0  0  0  3  0  4  0  0  3  1  0  0  2  0  1]
 [ 0  0  1  1  0  0  0  1  0  1  1  0  0  0  0]
 [ 1  0  1  0  3  1  0  1  3  0  3  0  0  0  0]
 [ 0  0  0  0  0  0  0  1  1  0  0  3  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  1  0  0 12  0  1]
 [ 0  0  1  0  0  2  1  0  4  0  0  1  0  3  0]
 [ 0  1  1  0  0  0  0  0  0  2  0  0  0  0  4]]
 
 
 
 
 
SVM (Kernel = linear):


Training accuracy: 100%

Confusion matrix:

[[31  0  0  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0 18  0  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0 10  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0 10  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0 23  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0 22  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0 16  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 16  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0 12  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0 38  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0 13  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0 26  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0 15  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0 20]]
 
 
 Testing accuracy: ~45%
 
 Confusion matrix:
 
[[ 4  1  1  0  1  1  2  0  2  1  0  0  0  0  0]
 [ 0  4  0  0  0  0  1  0  2  0  0  0  0  0  0]
 [ 0  1  2  2  0  0  0  1  1  0  0  0  0  0  0]
 [ 0  0  0  1  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  1  0  1  0  0  0  0  0  0  0  0]
 [ 0  1  0  0  0  6  1  1  2  0  0  0  0  0  1]
 [ 0  0  0  0  0  0  3  0  0  0  0  0  0  0  0]
 [ 0  0  0  1  0  1  0  5  1  0  0  1  0  0  1]
 [ 1  0  0  2  0  2  1  0  2  1  0  0  2  1  0]
 [ 0  1  1  1  0  0  0  0  0  1  1  0  0  0  0]
 [ 1  0  1  0  4  0  0  2  4  0  3  0  0  0  0]
 [ 0  1  0  0  0  0  0  1  0  0  0  3  0  0  0]
 [ 0  0  0  0  0  1  0  0  0  1  0  0 12  0  1]
 [ 0  0  1  1  1  2  0  0  2  0  0  0  0  3  0]
 [ 0  0  0  0  0  0  0  0  0  1  0  0  0  0  5]]
 
 
 
 
 
 SVM (Kernel = polynomial):


Training accuracy: ~99%

Confusion matrix:

[[31  0  0  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0 18  0  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  9  0  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0 10  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0 23  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0 22  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0 14  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0 16  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0 16  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0 12  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0 38  0  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0 13  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0 26  0  0]
 [ 0  0  1  0  0  0  0  0  0  0  0  0  0 15  0]
 [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0 20]]
 
 
 Testing accuracy: ~41.5%
 
 Confusion matrix:
 
[[ 4  1  0  1  1  0  2  0  0  0  0  0  0  0  0]
 [ 0  3  0  1  0  0  1  2  0  0  0  0  0  0  0]
 [ 0  0  1  2  0  0  0  0  0  1  0  0  0  0  0]
 [ 0  0  0  1  0  0  0  0  0  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  1  0  1  0  0  0  0  0  0]
 [ 0  1  1  0  2  7  1  1  1  1  1  0  0  0  1]
 [ 0  0  0  0  1  0  3  0  1  0  0  0  0  0  0]
 [ 0  0  0  0  0  0  0  4  1  0  0  0  0  0  1]
 [ 1  0  0  1  0  4  1  0  5  0  0  0  2  1  0]
 [ 0  1  1  1  0  0  0  0  0  1  1  0  0  0  0]
 [ 1  0  1  0  2  0  0  2  2  0  2  1  0  1  0]
 [ 0  2  0  0  0  0  0  1  0  0  0  1  0  0  0]
 [ 0  0  0  0  0  0  0  0  0  1  0  0 12  0  1]
 [ 0  0  2  1  1  2  0  0  5  0  0  2  0  2  0]
 [ 0  1  0  0  0  0  0  0  0  1  0  0  0  0  5]]
 
 
 



I also used SVM (RBF kernel) and NB Gaussian model but it gave me very less accuracy.
